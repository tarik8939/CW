@model CW.Models.Purchase

@{
    ViewData["Title"] = "Create";
    var price = Convert.ToDouble(@ViewData["TicketPrice"]);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Client.FirstName" class="control-label"></label>
                <input asp-for="Client.FirstName" class ="form-control" asp-items="Client.FirstName"></input>
            </div>
            <div class="form-group">
                <label asp-for="Client.LastName" class="control-label"></label>
                <input asp-for="Client.LastName" class ="form-control" asp-items="Client.LastName"></input>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentId" class="control-label"></label>
                <select asp-for="DepartmentId" class ="form-control" asp-items="ViewBag.DepartmentId"></select>
            </div>
            <div class="form-group">
                <label asp-for="TotalPrice" class="control-label"></label>
                <input asp-for="TotalPrice" class="form-control" value=" " id="valforall" />
            </div>
            <div class="form-group">
                <label asp-for="TicketCount" class="control-label"></label>
                <input asp-for="TicketCount" class="form-control" value="1" id="tc"/>
                <span asp-validation-for="TicketCount" class="text-danger" ></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-outline-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
}
